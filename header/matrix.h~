#ifndef _MATRIX_H_
#define _MATRIX_H_

#include <string>

class Matrix 
{
private:

	float m_fCP;
	float m_fGravity;
	float m_fWaterDensity;
	float m_fInitialWaterTemperature;
	float m_fStillWaterLimit;
	float m_fPipeUnitLength;

public:
	Matrix();
	virtual ~Matrix();
	
	void setCP(float p) {m_fCP = p;};
	void setGravity(float p) {m_fGravity = p;};
	void setWaterDensity(float p) {m_fWaterDensity = p;};
	void setInitialWaterTemperature(float p) {m_fInitialWaterTemperature = p;};
	void setStillWaterLimit(float p) {m_fStillWaterLimit = p;};
	void setPipeUnitLength(float p) {m_fPipeUnitLength = p;};
};

#endif